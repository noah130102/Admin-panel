<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Update and Delete Roles</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- Add Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
  </head>

  <body class="">
    <%- include('navbar') %> <%- include('sidebar') %>
    <div class="content-wrapper mb-2">
      <div
        id="container"
        class="container mt-4 card p-3 border align-items-center ml-auto mr-auto w-200"
      >
        <h2 class="mb-4">Roles Management</h2>
        <table class="table">
          <thead>
            <tr>
              <th scope="col">Role</th>
              <th scope="col">Active</th>
              <th scope="col">Permissions</th>
              <th scope="col">Commands</th>
            </tr>
          </thead>
          <tbody id="roleList"></tbody>
        </table>
      </div>
    </div>
    <!-- Modal -->
    <div
      class="modal fade"
      id="exampleModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="exampleModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Update Role</h5>
            <button
              type="button"
              class="close"
              data-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <form class="modal-body" id="updateForm">
            <div class="form-outline mb-4">
              <input
                type="text"
                name="Role"
                id="modalRole"
                class="form-control"
                placeholder="Role"
              />
            </div>
            <div id="actives" class="form-outline mb-4">
              <select
                class="form-select"
                id="active"
                name="active"
                aria-label="Default select example"
              >
                <option value="1" selected>Active</option>

                <option value="0">Not Active</option>
              </select>
            </div>
            <div class="permissions-container form-outline mb-4 p-3">
              <label class="form-check-label" for="permissions-check"
                >Permissions</label
              >
              <div class="permissions-options">
                <div class="form-check">
                  <input
                    type="checkbox"
                    id="check1"
                    name="check1"
                    class="form-check-input"
                    value=""
                  />
                  <label class="form-check-label" for="flexCheckDefault">
                    Allow Access to all pages
                  </label>
                </div>
                <div class="form-check">
                  <input
                    type="checkbox"
                    id="check2"
                    name="check2"
                    class="form-check-input"
                    value=""
                  />
                  <label class="form-check-label" for="flexCheckChecked">
                    Allow Display
                  </label>
                </div>
                <div class="form-check">
                  <input
                    type="checkbox"
                    id="check3"
                    name="check3"
                    class="form-check-input"
                    value=""
                  />
                  <label class="form-check-label" for="flexCheckChecked">
                    Allow Editing User
                  </label>
                </div>
              </div>
            </div>
            <button type="submit" class="btn btn-primary">Update Role</button>
          </form>
          <div class="modal-footer">
            <button
              type="button"
              id="closeBtn"
              class="btn btn-secondary"
              data-dismiss="modal"
              onclick="removeLS()"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>
    <script>
      let selectedId = 0;

      const fetchData = async () => {
        try {
          const response = await axios.get("/getRoles");
          const data = Object.entries(response.data);

          return data;
        } catch (error) {
          console.log(error);
          return;
        }
      };

      const displayData = async () => {
        const roleList = document.querySelector("#roleList");
        const data = await fetchData();
        if (!data) {
          return;
        }

        data.forEach((item) => {
          const role = document.createElement("tr");

          const textRole = document.createElement("td");
          textRole.textContent = item[1].role;
          role.appendChild(textRole);

          const textActive = document.createElement("td");
          if (item[1].active === 1) {
            textActive.textContent = "on";
          } else {
            textActive.textContent = "off";
          }
          role.appendChild(textActive);

          const textPermissions = document.createElement("td");
          const arr = [];
          item[1].permissions.forEach((temp) => arr.push(temp));

          if (item[1].permissions.length === 0) {
            arr.push("No permissions!!");
          }

          textPermissions.textContent = arr.join(" - ");
          role.appendChild(textPermissions);

          const updateBtn = document.createElement("button");
          updateBtn.textContent = "Update ";
          updateBtn.classList.add("btn");

          role.appendChild(updateBtn);

          const deleteBtn = document.createElement("button");
          deleteBtn.textContent = "Delete";
          deleteBtn.classList.add("btn");

          role.appendChild(deleteBtn);

          roleList.appendChild(role);

          updateBtn.addEventListener("click", () => {
            openModal(item[1]._id);
          });

          deleteBtn.addEventListener("click", () => {
            deleteRole(item[1]._id);
          });
        });
      };

      const openModal = async (id) => {
        localStorage.setItem("openedId", id);

        const roleDetails = await axios.get(`getRoleDetails/${id}`);

        const s = document.getElementById("modalRole");
        const a = document.getElementById("active");
        const check1 = document.getElementById("check1");
        const check2 = document.getElementById("check2");
        const check3 = document.getElementById("check3");

        s.value = roleDetails.data.data.role;
        a.value = roleDetails.data.data.active;
        const arr = roleDetails.data.data.permissions;
        check1.checked = false;
        check2.checked = false;
        check3.checked = false;
        if (arr.includes("allowAll")) {
          console.log("allowAll");
          check1.checked = true;
        }
        if (arr.includes("allowDisplay")) {
          console.log("allowDisplay");
          check2.checked = true;
        }
        if (arr.includes("allowEdit")) {
          console.log("allowEdit");
          check3.checked = true;
        }

        var myModal = new bootstrap.Modal(
          document.getElementById("exampleModal"),

          {
            keyboard: false,
          }
        );
        myModal.show();
      };
      // const updateRole = async (id, role, active, checkedArray) => {};

      const deleteRole = async (id) => {
        try {
          // if (del) {
          if (confirm("Do you Really Want to Delete Role !!!")) {
            const del = await axios.delete(`/deleteRole/${id}`);
            window.location.reload();
          }
          // }
        } catch (error) {
          console.log(error);
          alert(error);
        }
      };

      displayData();

      const removeLS = () => {
        localStorage.removeItem("openedId");
      };
      const form = document.querySelector("#updateForm");
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const role = e.target.Role.value;
        const active = e.target.active.value;

        let checkedArray = [];

        if (e.target.check1.checked == true) {
          checkedArray.push("allowAll");
        }
        if (e.target.check2.checked == true) {
          checkedArray.push("allowDisplay");
        }
        if (e.target.check3.checked == true) {
          checkedArray.push("allowEdit");
        }
        const id = localStorage.getItem("openedId");

        if (role !== "") {
          try {
            const updatedRole = await axios.put(`/updateRole/${id}`, {
              role,
              active,
              permissions: checkedArray,
            });

            if (updatedRole) {
              window.location.reload();
              localStorage.removeItem("openedId");
            }
          } catch (error) {
            console.log(error);
            alert("eeeeeeeeeeee", error);
          }
        } else {
          try {
            const updatedRole = await axios.put(`/updateRole/${id}`, {
              active,
              permissions: checkedArray,
            });

            if (updatedRole) {
              window.location.reload();
              localStorage.removeItem("openedId");
            }
          } catch (error) {
            console.log(error);
            alert("eeeeeeeeeeee", error);
          }
        }
      });
    </script>
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
